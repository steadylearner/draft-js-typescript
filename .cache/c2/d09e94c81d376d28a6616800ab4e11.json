{"id":"../node_modules/draft-js/lib/AtomicBlockUtils.js","dependencies":[{"name":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/package.json","includedInParent":true,"mtime":1586707075595},{"name":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/package.json","includedInParent":true,"mtime":1586540831660},{"name":"./BlockMapBuilder","loc":{"line":17,"column":30},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/BlockMapBuilder.js"},{"name":"./CharacterMetadata","loc":{"line":19,"column":32},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/CharacterMetadata.js"},{"name":"./ContentBlock","loc":{"line":21,"column":27},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/ContentBlock.js"},{"name":"./ContentBlockNode","loc":{"line":23,"column":31},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/ContentBlockNode.js"},{"name":"./DraftModifier","loc":{"line":25,"column":28},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/DraftModifier.js"},{"name":"./EditorState","loc":{"line":27,"column":26},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/EditorState.js"},{"name":"./generateRandomKey","loc":{"line":29,"column":32},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/generateRandomKey.js"},{"name":"./gkx","loc":{"line":31,"column":18},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/gkx.js"},{"name":"immutable","loc":{"line":33,"column":24},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/immutable/dist/immutable.js"},{"name":"./moveBlockInContentState","loc":{"line":35,"column":38},"parent":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/AtomicBlockUtils.js","resolved":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/lib/moveBlockInContentState.js"}],"generated":{"js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar BlockMapBuilder = require(\"./BlockMapBuilder\");\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar moveBlockInContentState = require(\"./moveBlockInContentState\");\n\nvar experimentalTreeDataSupport = gkx('draft_tree_data_support');\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\nvar AtomicBlockUtils = {\n  insertAtomicBlock: function insertAtomicBlock(editorState, entityKey, character) {\n    var contentState = editorState.getCurrentContent();\n    var selectionState = editorState.getSelection();\n    var afterRemoval = DraftModifier.removeRange(contentState, selectionState, 'backward');\n    var targetSelection = afterRemoval.getSelectionAfter();\n    var afterSplit = DraftModifier.splitBlock(afterRemoval, targetSelection);\n    var insertionTarget = afterSplit.getSelectionAfter();\n    var asAtomicBlock = DraftModifier.setBlockType(afterSplit, insertionTarget, 'atomic');\n    var charData = CharacterMetadata.create({\n      entity: entityKey\n    });\n    var atomicBlockConfig = {\n      key: generateRandomKey(),\n      type: 'atomic',\n      text: character,\n      characterList: List(Repeat(charData, character.length))\n    };\n    var atomicDividerBlockConfig = {\n      key: generateRandomKey(),\n      type: 'unstyled'\n    };\n\n    if (experimentalTreeDataSupport) {\n      atomicBlockConfig = _objectSpread({}, atomicBlockConfig, {\n        nextSibling: atomicDividerBlockConfig.key\n      });\n      atomicDividerBlockConfig = _objectSpread({}, atomicDividerBlockConfig, {\n        prevSibling: atomicBlockConfig.key\n      });\n    }\n\n    var fragmentArray = [new ContentBlockRecord(atomicBlockConfig), new ContentBlockRecord(atomicDividerBlockConfig)];\n    var fragment = BlockMapBuilder.createFromArray(fragmentArray);\n    var withAtomicBlock = DraftModifier.replaceWithFragment(asAtomicBlock, insertionTarget, fragment);\n    var newContent = withAtomicBlock.merge({\n      selectionBefore: selectionState,\n      selectionAfter: withAtomicBlock.getSelectionAfter().set('hasFocus', true)\n    });\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  },\n  moveAtomicBlock: function moveAtomicBlock(editorState, atomicBlock, targetRange, insertionMode) {\n    var contentState = editorState.getCurrentContent();\n    var selectionState = editorState.getSelection();\n    var withMovedAtomicBlock;\n\n    if (insertionMode === 'before' || insertionMode === 'after') {\n      var targetBlock = contentState.getBlockForKey(insertionMode === 'before' ? targetRange.getStartKey() : targetRange.getEndKey());\n      withMovedAtomicBlock = moveBlockInContentState(contentState, atomicBlock, targetBlock, insertionMode);\n    } else {\n      var afterRemoval = DraftModifier.removeRange(contentState, targetRange, 'backward');\n      var selectionAfterRemoval = afterRemoval.getSelectionAfter();\n\n      var _targetBlock = afterRemoval.getBlockForKey(selectionAfterRemoval.getFocusKey());\n\n      if (selectionAfterRemoval.getStartOffset() === 0) {\n        withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, 'before');\n      } else if (selectionAfterRemoval.getEndOffset() === _targetBlock.getLength()) {\n        withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, 'after');\n      } else {\n        var afterSplit = DraftModifier.splitBlock(afterRemoval, selectionAfterRemoval);\n        var selectionAfterSplit = afterSplit.getSelectionAfter();\n\n        var _targetBlock2 = afterSplit.getBlockForKey(selectionAfterSplit.getFocusKey());\n\n        withMovedAtomicBlock = moveBlockInContentState(afterSplit, atomicBlock, _targetBlock2, 'before');\n      }\n    }\n\n    var newContent = withMovedAtomicBlock.merge({\n      selectionBefore: selectionState,\n      selectionAfter: withMovedAtomicBlock.getSelectionAfter().set('hasFocus', true)\n    });\n    return EditorState.push(editorState, newContent, 'move-block');\n  }\n};\nmodule.exports = AtomicBlockUtils;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/draft-js/lib/AtomicBlockUtils.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}}],"sources":{"../node_modules/draft-js/lib/AtomicBlockUtils.js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar BlockMapBuilder = require(\"./BlockMapBuilder\");\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DraftModifier = require(\"./DraftModifier\");\n\nvar EditorState = require(\"./EditorState\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar moveBlockInContentState = require(\"./moveBlockInContentState\");\n\nvar experimentalTreeDataSupport = gkx('draft_tree_data_support');\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar List = Immutable.List,\n    Repeat = Immutable.Repeat;\nvar AtomicBlockUtils = {\n  insertAtomicBlock: function insertAtomicBlock(editorState, entityKey, character) {\n    var contentState = editorState.getCurrentContent();\n    var selectionState = editorState.getSelection();\n    var afterRemoval = DraftModifier.removeRange(contentState, selectionState, 'backward');\n    var targetSelection = afterRemoval.getSelectionAfter();\n    var afterSplit = DraftModifier.splitBlock(afterRemoval, targetSelection);\n    var insertionTarget = afterSplit.getSelectionAfter();\n    var asAtomicBlock = DraftModifier.setBlockType(afterSplit, insertionTarget, 'atomic');\n    var charData = CharacterMetadata.create({\n      entity: entityKey\n    });\n    var atomicBlockConfig = {\n      key: generateRandomKey(),\n      type: 'atomic',\n      text: character,\n      characterList: List(Repeat(charData, character.length))\n    };\n    var atomicDividerBlockConfig = {\n      key: generateRandomKey(),\n      type: 'unstyled'\n    };\n\n    if (experimentalTreeDataSupport) {\n      atomicBlockConfig = _objectSpread({}, atomicBlockConfig, {\n        nextSibling: atomicDividerBlockConfig.key\n      });\n      atomicDividerBlockConfig = _objectSpread({}, atomicDividerBlockConfig, {\n        prevSibling: atomicBlockConfig.key\n      });\n    }\n\n    var fragmentArray = [new ContentBlockRecord(atomicBlockConfig), new ContentBlockRecord(atomicDividerBlockConfig)];\n    var fragment = BlockMapBuilder.createFromArray(fragmentArray);\n    var withAtomicBlock = DraftModifier.replaceWithFragment(asAtomicBlock, insertionTarget, fragment);\n    var newContent = withAtomicBlock.merge({\n      selectionBefore: selectionState,\n      selectionAfter: withAtomicBlock.getSelectionAfter().set('hasFocus', true)\n    });\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  },\n  moveAtomicBlock: function moveAtomicBlock(editorState, atomicBlock, targetRange, insertionMode) {\n    var contentState = editorState.getCurrentContent();\n    var selectionState = editorState.getSelection();\n    var withMovedAtomicBlock;\n\n    if (insertionMode === 'before' || insertionMode === 'after') {\n      var targetBlock = contentState.getBlockForKey(insertionMode === 'before' ? targetRange.getStartKey() : targetRange.getEndKey());\n      withMovedAtomicBlock = moveBlockInContentState(contentState, atomicBlock, targetBlock, insertionMode);\n    } else {\n      var afterRemoval = DraftModifier.removeRange(contentState, targetRange, 'backward');\n      var selectionAfterRemoval = afterRemoval.getSelectionAfter();\n\n      var _targetBlock = afterRemoval.getBlockForKey(selectionAfterRemoval.getFocusKey());\n\n      if (selectionAfterRemoval.getStartOffset() === 0) {\n        withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, 'before');\n      } else if (selectionAfterRemoval.getEndOffset() === _targetBlock.getLength()) {\n        withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, 'after');\n      } else {\n        var afterSplit = DraftModifier.splitBlock(afterRemoval, selectionAfterRemoval);\n        var selectionAfterSplit = afterSplit.getSelectionAfter();\n\n        var _targetBlock2 = afterSplit.getBlockForKey(selectionAfterSplit.getFocusKey());\n\n        withMovedAtomicBlock = moveBlockInContentState(afterSplit, atomicBlock, _targetBlock2, 'before');\n      }\n    }\n\n    var newContent = withMovedAtomicBlock.merge({\n      selectionBefore: selectionState,\n      selectionAfter: withMovedAtomicBlock.getSelectionAfter().set('hasFocus', true)\n    });\n    return EditorState.push(editorState, newContent, 'move-block');\n  }\n};\nmodule.exports = AtomicBlockUtils;"},"lineCount":117}},"error":null,"hash":"5c99baea154c3070a889032ac0d368b8","cacheData":{"env":{}}}