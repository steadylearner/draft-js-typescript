{"id":"../node_modules/draft-js/lib/DraftOffsetKey.js","dependencies":[{"name":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/package.json","includedInParent":true,"mtime":1586707075595},{"name":"/home/steadylearner/Desktop/code/site/Rust-Full-Stack/draft-js/node_modules/draft-js/package.json","includedInParent":true,"mtime":1586540831660}],"generated":{"js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar KEY_DELIMITER = '-';\nvar DraftOffsetKey = {\n  encode: function encode(blockKey, decoratorKey, leafKey) {\n    return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\n  },\n  decode: function decode(offsetKey) {\n    // Extracts the last two parts of offsetKey and captures the rest in blockKeyParts\n    var _offsetKey$split$reve = offsetKey.split(KEY_DELIMITER).reverse(),\n        leafKey = _offsetKey$split$reve[0],\n        decoratorKey = _offsetKey$split$reve[1],\n        blockKeyParts = _offsetKey$split$reve.slice(2);\n\n    return {\n      // Recomposes the parts of blockKey after reversing them\n      blockKey: blockKeyParts.reverse().join(KEY_DELIMITER),\n      decoratorKey: parseInt(decoratorKey, 10),\n      leafKey: parseInt(leafKey, 10)\n    };\n  }\n};\nmodule.exports = DraftOffsetKey;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/draft-js/lib/DraftOffsetKey.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../node_modules/draft-js/lib/DraftOffsetKey.js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar KEY_DELIMITER = '-';\nvar DraftOffsetKey = {\n  encode: function encode(blockKey, decoratorKey, leafKey) {\n    return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\n  },\n  decode: function decode(offsetKey) {\n    // Extracts the last two parts of offsetKey and captures the rest in blockKeyParts\n    var _offsetKey$split$reve = offsetKey.split(KEY_DELIMITER).reverse(),\n        leafKey = _offsetKey$split$reve[0],\n        decoratorKey = _offsetKey$split$reve[1],\n        blockKeyParts = _offsetKey$split$reve.slice(2);\n\n    return {\n      // Recomposes the parts of blockKey after reversing them\n      blockKey: blockKeyParts.reverse().join(KEY_DELIMITER),\n      decoratorKey: parseInt(decoratorKey, 10),\n      leafKey: parseInt(leafKey, 10)\n    };\n  }\n};\nmodule.exports = DraftOffsetKey;"},"lineCount":33}},"error":null,"hash":"b1397ffab67631d9397984695c84c8b4","cacheData":{"env":{}}}